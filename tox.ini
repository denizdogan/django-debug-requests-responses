[tox]
isolated_build = True
env_list =
    py{38,39,310}-django32
    py{38,39,310}-django40
    py{38,39,310,311}-django41

[pytest]
django_find_project = false
DJANGO_SETTINGS_MODULE = tests.settings
addopts = --doctest-modules
pythonpath = .
testpaths = tests

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311

[testenv]
allowlist_externals = poetry
commands_pre =
    poetry install -n --no-ansi --no-root --sync --all-extras --with=test
commands =
    poetry run pytest --color=no --import-mode importlib
setenv =
    PYTHONPATH = {toxinidir}:{env:PYTHONPATH:}

# TODO: there must be a better way than this... this sucks.
[testenv:py38-django32]
commands_pre =
    {[testenv]commands_pre}
    poetry run pip install Django~=3.2.0
    poetry run python -m django --version
    poetry run python --version
[testenv:py39-django32]
commands_pre = {[testenv:py38-django32]commands_pre}
[testenv:py310-django32]
commands_pre = {[testenv:py38-django32]commands_pre}
[testenv:py38-django40]
commands_pre =
    {[testenv]commands_pre}
    poetry run pip install Django~=4.0.0
    poetry run python -m django --version
    poetry run python --version
[testenv:py39-django40]
commands_pre = {[testenv:py38-django40]commands_pre}
[testenv:py310-django40]
commands_pre = {[testenv:py38-django40]commands_pre}
[testenv:py38-django41]
commands_pre =
    {[testenv]commands_pre}
    poetry run pip install Django~=4.1.0
    poetry run python -m django --version
    poetry run python --version
[testenv:py39-django41]
commands_pre = {[testenv:py38-django41]commands_pre}
[testenv:py310-django41]
commands_pre = {[testenv:py38-django41]commands_pre}
[testenv:py311-django41]
commands_pre = {[testenv:py38-django41]commands_pre}
